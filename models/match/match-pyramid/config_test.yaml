# Copyrigh t(c) 2020 PaddlePaddle Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


workspace: "paddlerec.models.match.match-pyramid"

dataset:
- name: dataset_infer
  batch_size: 1
  type: DataLoader
  data_path: "{workspace}/data/test"
  data_converter: "{workspace}/synthetic_evaluate_reader.py"

hyper_parameters:
  optimizer:
    class: adam
    learning_rate: 0.001
    strategy: async
  emb_path: "./data/embedding.npy"
  sentence_left_size: 20
  sentence_right_size: 500
  vocab_size: 193368
  emb_size: 50
  kernel_num: 8
  hidden_size: 20
  hidden_act: "relu"
  out_size: 1
  channels: 1
  conv_filter: [2,10]
  conv_act: "relu"
  pool_size: [6,50]
  pool_stride: [6,50]
  pool_type: "max"
  pool_padding: "VALID"

mode: infer_runner
# config of each runner.
# runner is a kind of paddle training class, which wraps the train/infer process.
runner:
- name: infer_runner
  class: infer
  # device to run training or infer
  device: cpu
  print_interval: 1
  init_model_path: "inference/1" # load model path
  phases: phase_infer

# runner will run all the phase in each epoch
phase:
- name: phase_infer
  model: "{workspace}/model.py" # user-defined model
  dataset_name: dataset_infer # select dataset by name
  thread_num: 1
