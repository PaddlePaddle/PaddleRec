# Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# global settings 
debug: false
workspace: "models/rank/logistic_regression"

dygraph:
  train_data_dir: "data/slot_train_data"
  use_gpu: True
  batch_size: 1024
  epochs: 2
  print_interval: 100
  #model_init_path: "output_model_all/0" # init model
  model_save_path: "output_model_all"
  test_data_dir: "data/slot_test_data"
  infer_load_path: "output_model_all"
  infer_start_epoch: -1
  infer_end_epoch: 10

dataset:
  - name: train_sample
    type: DataLoader
    batch_size: 5
    data_path: "{workspace}/data/sample_data/train"
    sparse_slots: "label feat_idx"
    dense_slots: "feat_value:39"
  - name: infer_sample
    type: DataLoader
    batch_size: 5
    data_path: "{workspace}/data/sample_data/train"
    sparse_slots: "label feat_idx"
    dense_slots: "feat_value:39"

hyper_parameters:
    optimizer:
        class: Adam
        learning_rate: 0.001
    sparse_feature_number: 1086460
    sparse_feature_dim: 9
    num_field: 39
    reg: 0.001


mode: [train_runner,infer_runner]
# if infer, change mode to "infer_runner" and change phase to "infer_phase"

runner:
  - name: train_runner
    class: train
    epochs: 10
    device: cpu
    init_model_path: ""
    save_checkpoint_interval: 1
    save_inference_interval: 1
    save_checkpoint_path: "increment"
    save_inference_path: "inference"
    print_interval: 1
    phases: phase1
  - name: infer_runner
    class: infer
    device: cpu
    init_model_path: "increment/1"
    print_interval: 1
    phases: infer_phase
    

phase:
- name: phase1
  model: "{workspace}/model.py"
  dataset_name: train_sample
  thread_num: 1
- name: infer_phase
  model: "{workspace}/model.py"
  dataset_name: infer_sample
  thread_num: 1
