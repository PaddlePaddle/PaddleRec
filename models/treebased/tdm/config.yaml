# Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

train:
  trainer:
    # for cluster training
    strategy: "async"

  epochs: 2
  workspace: "paddlerec.models.treebased.tdm"

  reader:
    batch_size: 32
    class: "{workspace}/tdm_reader.py"
    train_data_path: "{workspace}/data/train"
    test_data_path: "{workspace}/data/test"
    reader_debug_mode: False

  model:
    models: "{workspace}/model.py"
    hyper_parameters:
      node_emb_size: 64
      input_emb_size: 768
      neg_sampling_list: [1, 2, 3, 4]
      output_positive: True
      topK: 1
      learning_rate: 0.0001
      act: "tanh"
      optimizer: ADAM
    tree_parameters:
      max_layers: 4
      node_nums: 26
      leaf_node_nums: 13
      layer_node_num_list: [2, 4, 7, 12]
      child_nums: 2
      
  
  startup:
    tree:
      # 单机训练建议tree只load一次，保存为paddle tensor，之后从paddle模型热启
      # 分布式训练trainer需要独立load 
      load_tree: True
      tree_layer_path: "{workspace}/tree/layer_list.txt"
      tree_travel_path: "{workspace}/tree/travel_list.npy"
      tree_info_path: "{workspace}/tree/tree_info.npy"
      tree_emb_path: "{workspace}/tree/tree_emb.npy"
    single:
      load_persistables: False
      persistables_model_path: ""
      save_init_model: True
      init_model_path: "{workspace}/init_model"
    cluster:
      init_model_path: "{workspace}/init_model"

  save:
    increment:
      dirname: "increment"
      epoch_interval: 1
      save_last: True
    inference:
      dirname: "inference"
      epoch_interval: 10
      save_last: True

evaluate:
  workspace: "paddlerec.models.recall.tdm"
  reader:
    batch_size: 1
    class: "{workspace}/tdm_evaluate_reader.py"
    test_data_path: "{workspace}/data/test"
